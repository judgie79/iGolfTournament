@model CourseHoleCreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Hole</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Club.Id)
        @Html.HiddenFor(model => model.Course.Id)
        @Html.HiddenFor(model => model.Teebox.Id)

        <table>
            <thead>
                <tr>
                    <th colspan="@(Model.CourseHoles.Front.Count +1)">Front</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Html.DisplayNameFor(model => Model.ViewModel.Id)</td>
                    @for (var i = 0; i < Model.CourseHoles.Front.Count; i++)
                    {
                        <td>
                            @Html.DropDownListFor(model => Model.CourseHoles.Front[i].HoleId, Model.Holes.Select(hole => new SelectListItem() { Text = hole.Name, Value = hole.Id }), new { @class = "form-control" })
                        </td>
                    }
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => Model.ViewModel.Number)</td>
                    @for (var i = 0; i < Model.CourseHoles.Front.Count; i++)
                    {
                        <td>@Html.TextBoxFor(model => Model.CourseHoles.Front[i].Number)</td>
                    }
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => Model.ViewModel.Par)</td>
                    @for (var i = 0; i < Model.CourseHoles.Front.Count; i++)
                    {
                        <td>@Html.TextBoxFor(model => Model.CourseHoles.Front[i].Par)</td>
                    }
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => Model.ViewModel.Hcp)</td>
                    @for (var i = 0; i < Model.CourseHoles.Front.Count; i++)
                    {
                        <td>@Html.TextBoxFor(model => Model.CourseHoles.Front[i].Hcp)</td>
                    }
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => Model.ViewModel.Distance)</td>
                    @for (var i = 0; i < Model.CourseHoles.Front.Count; i++)
                    {
                        <td>@Html.TextBoxFor(model => Model.CourseHoles.Front[i].Distance)</td>
                    }
                </tr>
            </tbody>
        </table>

        <table>
            <thead>
                <tr>
                    <th colspan="@(Model.CourseHoles.Back.Count +1)">Back</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Html.DisplayNameFor(model => Model.ViewModel.Id)</td>
                    @for (var i = 0; i < Model.CourseHoles.Back.Count; i++)
                    {
                        <td>
                            @Html.DropDownListFor(model => Model.CourseHoles.Back[i].HoleId, Model.Holes.Select(hole => new SelectListItem() { Text = hole.Name, Value = hole.Id }), new { @class = "form-control" })
                        </td>
                    }
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => Model.ViewModel.Number)</td>
                    @for (var i = 0; i < Model.CourseHoles.Back.Count; i++)
                    {
                        <td>@Html.TextBoxFor(model => Model.CourseHoles.Back[i].Number)</td>
                    }
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => Model.ViewModel.Par)</td>
                    @for (var i = 0; i < Model.CourseHoles.Back.Count; i++)
                    {
                        <td>@Html.TextBoxFor(model => Model.CourseHoles.Back[i].Par)</td>
                    }
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => Model.ViewModel.Hcp)</td>
                    @for (var i = 0; i < Model.CourseHoles.Back.Count; i++)
                    {
                        <td>@Html.TextBoxFor(model => Model.CourseHoles.Back[i].Hcp)</td>
                    }
                </tr>
                <tr>
                    <td>@Html.DisplayNameFor(model => Model.ViewModel.Distance)</td>
                    @for (var i = 0; i < Model.CourseHoles.Back.Count; i++)
                    {
                        <td>@Html.TextBoxFor(model => Model.CourseHoles.Back[i].Distance)</td>
                    }
                </tr>
            </tbody>
        </table>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
