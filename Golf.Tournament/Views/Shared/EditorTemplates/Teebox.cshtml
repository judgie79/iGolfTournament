@using Golf.Tournament.Utility
@model Golf.Tournament.Models.TeeBox
@{
    string teeName = "";
    if (Model.Name != null)
    {
        teeName = Model.Name;
        teeName = teeName.Replace(" ", "_");
    }

    int teeIndex = 0;
    if (ViewBag.teeIndex != null)
    {
        teeIndex = ViewBag.teeIndex;
    }
}

<div class="form-group">
    @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-sm-2" })
    @Html.HiddenFor(model => model.Id)
    <div class="col-sm-2">
        @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-sm-2" })
    <div class="col-sm-2">
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Distance, htmlAttributes: new { @class = "control-label col-sm-2" })
    <div class="col-sm-2">
        @Html.EditorFor(model => model.Distance, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Par, htmlAttributes: new { @class = "control-label col-sm-2" })
    <div class="col-sm-2">
        @Html.EditorFor(model => model.Par, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Par, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.CourseRating, htmlAttributes: new { @class = "control-label col-sm-2" })
    <div class="col-sm-2">
        @Html.EditorFor(model => model.CourseRating, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.CourseRating, "", new { @class = "text-danger" })
    </div>
</div>  

<div class="form-group">
    @Html.LabelFor(model => model.SlopeRating, htmlAttributes: new { @class = "control-label col-sm-2" })
    <div class="col-sm-2">
        @Html.EditorFor(model => model.SlopeRating, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.SlopeRating, "", new { @class = "text-danger" })
    </div>
</div>

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal_@teeName">
    Show Holes
</button>

@*@using (Html.BeginContent("bottom"))
{*@
 <!-- Modal @teeName -->
<div class="modal fade" id="myModal_@teeName" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title">@Model.Name - Holes</h4>
            </div>
            <div class="modal-body">
                @Html.EditorFor(model => model.Holes, new { teeName = Model.Name })
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
 <!-- Modal @teeName -->
@*}*@
