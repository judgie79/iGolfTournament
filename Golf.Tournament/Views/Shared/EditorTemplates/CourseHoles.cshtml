@model Golf.Tournament.Models.CourseHoles
@{ 
    var viewModel = new CourseHole();
    HoleCollection holes = ViewBag.Holes ?? new HoleCollection();
}
<table class="table table-condensed holeEditTable">
    <colgroup>
        <col width="10%" />
    </colgroup>
    <thead>
        <tr>
            <th colspan="@(Model.Front.Count +1)">Front</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@Html.DisplayNameFor(model => viewModel.Id)</td>
            @for (var i = 0; i < Model.Front.Count; i++)
            {
                <td>
                    @Html.HiddenFor(model => model.Front[i].Id)
                    @Html.HiddenFor(model => model.Front[i].FrontOrBack)
                    @Html.DropDownListFor(model => Model.Front[i].HoleId, holes.Select(hole => new SelectListItem() { Text = hole.Name, Value = hole.Id, Selected = hole.Id == Model.Front[i].HoleId }), new { @class = "form-control input-sm" })
                </td>
            }
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => viewModel.Number)</td>
            @for (var i = 0; i < Model.Front.Count; i++)
            {
                <td>@Html.TextBoxFor(model => Model.Front[i].Number, new { @class = "form-control input-sm" })</td>
            }
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => viewModel.Par)</td>
            @for (var i = 0; i < Model.Front.Count; i++)
            {
                <td>@Html.TextBoxFor(model => Model.Front[i].Par, new { @class = "form-control input-sm" })</td>
            }
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => viewModel.Hcp)</td>
            @for (var i = 0; i < Model.Front.Count; i++)
            {
                <td>@Html.TextBoxFor(model => Model.Front[i].Hcp, new { @class = "form-control input-sm" })</td>
            }
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => viewModel.Distance)</td>
            @for (var i = 0; i < Model.Front.Count; i++)
            {
                <td>@Html.TextBoxFor(model => Model.Front[i].Distance, new { @class = "form-control input-sm" })</td>
            }
        </tr>
    </tbody>
</table>

<table class="table table-condensed holeEditTable">
    <colgroup>
        <col width="10%" />
    </colgroup>
    <thead>
        <tr>
            <th colspan="@(Model.Back.Count +1)">Back</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@Html.DisplayNameFor(model => viewModel.Id)</td>
            @for (var i = 0; i < Model.Back.Count; i++)
            {
                <td>
                    @Html.HiddenFor(model => model.Back[i].Id)
                    @Html.HiddenFor(model => model.Back[i].FrontOrBack)
                    @Html.DropDownListFor(model => Model.Back[i].HoleId, holes.Select(hole => new SelectListItem() { Text = hole.Name, Value = hole.Id, Selected = hole.Id == Model.Back[i].HoleId }), new { @class = "form-control input-sm" })
                </td>
            }
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => viewModel.Number)</td>
            @for (var i = 0; i < Model.Back.Count; i++)
            {
                <td>@Html.TextBoxFor(model => Model.Back[i].Number, new { @class = "form-control input-sm" })</td>
            }
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => viewModel.Par)</td>
            @for (var i = 0; i < Model.Back.Count; i++)
            {
                <td>@Html.TextBoxFor(model => Model.Back[i].Par, new { @class = "form-control input-sm" })</td>
            }
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => viewModel.Hcp)</td>
            @for (var i = 0; i < Model.Back.Count; i++)
            {
                <td>@Html.TextBoxFor(model => Model.Back[i].Hcp, new { @class = "form-control input-sm" })</td>
            }
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(model => viewModel.Distance)</td>
            @for (var i = 0; i < Model.Back.Count; i++)
            {
                <td>@Html.TextBoxFor(model => Model.Back[i].Distance, new { @class = "form-control input-sm" })</td>
            }
        </tr>
    </tbody>
</table>