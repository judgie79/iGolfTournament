@model Golf.Tournament.ViewModels.TournamentParticipantListViewModel
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.Label("Teebox")
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LabelModel.Teetime)
            </th>
            <th>@Html.DisplayNameFor(model => model.LabelModel.Player.Lastname)</th>
            <th>@Html.DisplayNameFor(model => model.LabelModel.Player.Firstname)</th>
            <th>@Html.DisplayNameFor(model => model.LabelModel.Player.Hcp)</th>
            <th>@Html.Label("Homeclub")</th>
            @if (Model.EditEnabled)
            {
            <th class="sorter-false filter-false"></th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Participants)
        {
            var teeBox = Model.Teeboxes.FirstOrDefault(m => m.Key == item.TeeboxId).Value;
            var fontColor = "#ffffff";

            if (teeBox.Color.Value.ToLower() == "#ffffff")
            {
                fontColor = "#000000";
            }
            <tr>
                <td><span style="background-color: @teeBox.Color.ToHtml(); width: 30px; height: 10px; display: inline-block; vertival-align: middle;">&nbsp;</span> @Html.DisplayFor(model => teeBox.Name)</td>
                <td>@Html.DisplayFor(model => item.Teetime)</td>
                <td>@Html.DisplayFor(model => item.Player.Lastname)</td>
                <td>@Html.DisplayFor(model => item.Player.Firstname)</td>
                <td>@Html.DisplayFor(model => item.Player.Hcp)</td>
                <td>@Html.DisplayFor(model => item.Player.HomeClub.Name)</td>

                @if (Model.EditEnabled)
                {<td>
                    @if (!Model.Tournament.HasStarted)
                    {
                        @Html.ActionLink("Edit", "Edit", new { tournamentId = Model.Tournament.Id, id = item.Id }, new { @class = "btn btn-xs btn-default" })
                    }
                    @Html.ActionLink("Details", "Details", new { tournamentId = Model.Tournament.Id, id = item.Id }, new { @class = "btn btn-xs btn-default" })
                    @if (!Model.Tournament.HasStarted)
                    {
                        @Html.ActionLink("Delete", "Delete", new { tournamentId = Model.Tournament.Id, id = item.Id }, new { @class = "btn btn-xs btn-danger" })
                    }
                </td>
                }
            </tr>
        }
    </tbody>
    <tfoot>
        <tr>
    <th>
        @Html.Label("Teebox")
    </th>
    <th>
        @Html.DisplayNameFor(model => model.LabelModel.Teetime)
    </th>
    <th>@Html.DisplayNameFor(model => model.LabelModel.Player.Lastname)</th>
    <th>@Html.DisplayNameFor(model => model.LabelModel.Player.Firstname)</th>
    <th>@Html.DisplayNameFor(model => model.LabelModel.Player.Hcp)</th>
    <th>@Html.Label("Homeclub")</th>
    @if (!Model.Tournament.HasStarted && Model.EditEnabled)
    {
        <th>
        @if (Model.ParticipantCreateViewModel.Players != null && Model.ParticipantCreateViewModel.Players.Count > 0)
        {
                <!-- Button trigger modal -->
            <button type="button" class="btn btn-sm btn-primary btn-lg" data-toggle="modal" data-target="#myModal_AddParticipant">
                Register Participant
            </button>
        }
        </th>
    }
    </tr>
    </tfoot>

</table>

@if (Model.ParticipantCreateViewModel.Players != null && Model.ParticipantCreateViewModel.Players.Count > 0)
{
    using (Html.BeginContent("bottom"))
    {
        <!-- Modal Add Participant -->
        <div class="modal fade" id="myModal_AddParticipant" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">

                    <form method="post" action="@Url.Action("Create", "Participant", new { tournamentId = Model.Tournament.Id })">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title">Add Participant</h4>
                        </div>
                        <div class="modal-body">

                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">

                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.Partial("Create", Model.ParticipantCreateViewModel)
                            </div>

                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Register Player</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <!-- Modal Add Participant -->
    }
}